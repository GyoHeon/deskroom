name: Extension Staging Deploy

on:
  push:
    tags:
      - "extension-stg-v*.*.*"

jobs:
  build:
    name: Publish webextension
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: client/apps/chrome-extension/yarn.lock
      - name: Install
        working-directory: client/apps/chrome-extension
        run: |
          yarn install --frozen-lockfile --immutable
      - name: Env file
        working-directory: client/apps/chrome-extension
        run: |
          echo "PLASMO_PUBLIC_SUPABASE_URL=${{ secrets.DSKRM_SUPABASE_URL }}" >> .env
          echo "PLASMO_PUBLIC_SUPABASE_KEY=${{ secrets.DSKRM_SUPABASE_ANON_KEY }}" >> .env
          echo "PLASMO_PUBLIC_MIXPANEL_TOKEN=${{ secrets.DSKRM_MIXPANEL_TOKEN }}" >> .env
          echo "PLASMO_PUBLIC_SENTRY_DSN=${{ secrets.DSKRM_EXTENSION_SENTRY_DSN }}" >> .env
          echo "PLASMO_PUBLIC_KMS_URL=https://app.deskroom.so" >> .env
          echo "PLASMO_PUBLIC_KMS_COOKIE_PREFIX=${{ secrets.DSKRM_KMS_COOKIE_PREFIX }}" >> .env
          echo "PLASMO_PUBLIC_DSKRM_SERVER_URL=${{ secrets.DSKRM_SERVER_URL }}" >> .env
      - name: Build
        working-directory: client/apps/chrome-extension
        run: |
          npm pkg set manifest.name="(Staging) Deskroom Extension"
          yarn stg-build --zip
      - name: Upload & release
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: client/apps/chrome-extension/build/*.zip
          extension-id: ${{ secrets.DSKRM_STG_EXTENSION_ID }}
          client-id: ${{ secrets.DSKRM_STG_CLIENT_ID }}
          client-secret: ${{ secrets.DSKRM_STG_CLIENT_SECRET }}
          refresh-token: ${{ secrets.DSKRM_STG_REFRESH_TOKEN }}
          glob: true
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: client/apps/chrome-extension/build/*.zip
      - name: Notify Slack channel
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env: 
          SLACK_WEBHOOK: ${{ secrets.DSKRM_DEPLOY_SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: "#deskroom-deploy"
          SLACK_USERNAME: "Deskroom"
          SLACK_ICON: "https://app.deskroom.so/_next/image?url=%2Fdeskroom-icon.png&w=128&q=75"
          SLACK_TITLE: "Deskroom Extension (Staging)"
          SLACK_MESSAGE_ON_SUCCESS: "새로운 Extension이 배포되었습니다. Version: ${{ github.event.release.tag }}"
          SLACK_MESSAGE_ON_FAILURE: "Extension 배포 중 오류가 발생했습니다. Version: ${{ github.event.release.tag }}\nReason: ${{ job.status }}" 


