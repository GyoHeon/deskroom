[tool.poetry]
name = "deskroom"
version = "0.1.0"
description = ""
authors = ["Humphrey <ahnsv@bc.edu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "0.105.0"
uvicorn = "0.25.0"
supabase = "2.3.0"
structlog = "^24.1.0"
pydantic-settings = "^2.2.1"
newrelic = "^9.8.0"
openai = "^1.16.0"
azure-storage-blob = "^12.19.1"
azure-identity = "^1.15.0"
pandas = "^2.2.1"
python-multipart = "^0.0.9"
openpyxl = "^3.1.2"

arq = "^0.25.0"
watchfiles = "^0.21.0"
aiohttp = "^3.9.3"
sentry-sdk = {extras = ["fastapi"], version = "^1.45.0"}

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
ruff = "^0.3.4"
mypy = "^1.9.0"
pytest = "^8.1.1"
taskipy = "^1.12.2"
types-requests = "^2.31.0.20240406"

[tool.taskipy.tasks]
lint = { cmd = "ruff format . && ruff check --fix .", help = "run linters with autofix" }
lint_check = { cmd = "ruff format --check . && ruff check .", help = "run ruff linter" }
lint_types = { cmd = "mypy deskroom tests", help = "run mypy type verify" }
test = { cmd = "DSKRM_ENV=test pytest tests", help = "run tests" }
pre_merge = { cmd = "task lint_check && task lint_types && task test", help = "run pre-merge checks" }
run_server = { cmd = "uvicorn deskroom.app:app --reload", help = "run server" }
worker = { cmd = "arq run_worker.WorkerSettings --watch deskroom", help = "run worker" }

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
extend-select = ["I", "UP", "T20"]
ignore = [
    "F841", # remove unused variables
]


[tool.mypy]
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
strict_equality = true
disallow_untyped_defs = true
skip_cache_mtime_checks = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

